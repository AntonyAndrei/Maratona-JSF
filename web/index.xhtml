<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">

<h:head>
    <title>Maratona JSF</title>
</h:head>

<h:body>
    <!--PALAVRAS RESERVADAS: and, or, not, eq(equals), ne(not equal), lt(menor que), gt(maior que),
     le(menor igual), ge(maior igual), true, false, null, instanceof, empty, div, mod -->

    <p:importEnum type="br.com.devdojo.maratonajsf.model.enums.Turno" var="Turno"
                  allSuffix="ALL_ENUM_VALUES"/>

    <h:outputLabel value="Hello, world"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nome}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.sobrenome}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 eq estudanteRegistrarBean.estudante.nota2}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 == estudanteRegistrarBean.estudante.nota2}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 eq estudanteRegistrarBean.estudante.nota2 and
      estudanteRegistrarBean.estudante.nome.equals('Antony')}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 eq 0 ? 'Nota ZERO' : 'Nao ZERO'}"/><br/>
    <h:outputText value="ENUM"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.turno eq Turno.MATUTINO}"/><br/>

    <!-- Arrays -->
    <h:outputLabel value="#{estudanteRegistrarBean.nomesArray[0]}
    #{estudanteRegistrarBean.nomesArray[1]}
    #{estudanteRegistrarBean.nomesArray[2]}"/><br/>
    <!-- ui:repeat Array -->
    <ui:repeat value="#{estudanteRegistrarBean.nomesArray}" var="nome">
        <h:outputLabel value="#{nome}"/><br/>
    </ui:repeat>

    <!-- List -->
    <h:outputLabel value="#{estudanteRegistrarBean.nomesList.get(0)}
    #{estudanteRegistrarBean.nomesList.get(1)}
    #{estudanteRegistrarBean.nomesList.get(2)}"/><br/>
    <!-- ui:repeat List -->
    <ui:repeat value="#{estudanteRegistrarBean.nomesList}" var="nome">
        <h:outputLabel value="#{nome}"/><br/>
    </ui:repeat>
    <!-- ui:repeat SET-->
    <h:outputLabel value="------------SET-----------"/><br/>
    <ui:repeat value="#{estudanteRegistrarBean.nomesSet.toArray()}" var="nome">
        <h:outputLabel value="#{nome}"/><br/>
    </ui:repeat>

    <!--MAP-->
    <h:outputLabel value="------------MAP---------"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.nomesMap.get('Goku')}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.nomesMap}"/><br/>
    <!-- ui:repeat MAP -->
    <ui:repeat value="#{estudanteRegistrarBean.nomesMap.entrySet().toArray()}" var="entry">
        <h:outputLabel value="#{entry.key} - #{entry.value}"/><br/>
    </ui:repeat>

    <!--Executando Metodos-->
    #{estudanteRegistrarBean.executar()}
    <!--Com Parametro-->
    #{estudanteRegistrarBean.executar("xuxu beleza")}
    <!--Com Parametro vindo do Bean-->
    #{estudanteRegistrarBean.executar(estudanteRegistrarBean.estudante.nome)}
    <!--Metodos de retorno com parametro vindo do beans-->
    #{estudanteRegistrarBean.executarRetorno(estudanteRegistrarBean.estudante.nome)} <br/>

    <h:form>
        <h:commandButton value="Ir para a proxima pagina"
                         action="#{estudanteRegistrarBean.irParaIndex2()}"/><br/>

        <p:commandButton value="Soltar Magia">
            <f:ajax render="pgMagia" listener="#{estudanteRegistrarBean.mostrarMagia}"/>
        </p:commandButton>

        <h:panelGroup id="pgMagia">
            <ui:fragment id="fragmentMagia" rendered="#{estudanteRegistrarBean.soltarMagia}">
                <div>KAMEHAMEHAAAAAAAAAAAAAAA!!!!!!</div>
                <p:commandButton value="Ocultar Magia">
                    <f:ajax render="pgMagia" listener="#{estudanteRegistrarBean.esconderMagia}"/>
                </p:commandButton>
            </ui:fragment>
        </h:panelGroup>


    </h:form>

    <h:form>
        <h:commandButton value="Mostrar Nome" onclick="alertNome('#{estudanteRegistrarBean.estudante.nome}')"/><br/>
    </h:form>

    <!--Executando CSS-->
    <ui:repeat value="#{estudanteRegistrarBean.nomesArray}" var="nome"
               varStatus="status">
        <h:outputLabel value="#{nome}" style="color: #{status.index mod 2 == 0 ? 'red' : 'green'}"/><br/>
    </ui:repeat>
    <br/>

    <h:form id="form">
        <p:commandButton value="Exibir Notas">
            <f:ajax render="notasGrid" listener="#{estudanteRegistrarBean.exibirNotas()}"/>
        </p:commandButton> <br/>


        <h:panelGrid id="notasGrid">
            <h:outputText value="#{estudanteRegistrarBean.estudante.nome} "/>
            <h:outputText value="#{estudanteRegistrarBean.estudante.sobrenome} "/>
            <h:outputText value="#{estudanteRegistrarBean.estudante.turno} "/> <br/>

            <h:outputText value="#{estudanteRegistrarBean.estudante.nota1} "
                          rendered="#{estudanteRegistrarBean.mostrarNotas}"/>
            <h:outputText value="#{estudanteRegistrarBean.estudante.nota2} "
                          rendered="#{estudanteRegistrarBean.mostrarNotas}"/>
            <h:outputText value="#{estudanteRegistrarBean.estudante.nota3} "
                          rendered="#{estudanteRegistrarBean.mostrarNotas}"/>
        </h:panelGrid>

        <p:commandButton value="Ocultar notas">
            <f:ajax render="notasGrid" listener="#{estudanteRegistrarBean.esconderNotas()}"/><br/>
        </p:commandButton>
    </h:form>

    <!--Lambdas-->
    #{(soma -> soma + num)(10)}<br/>
    #{((v1,v2,v3) -> v1*v2*v3) (1,5,10)}<br/>
    #{cubo = (x -> x * x * x); cubo(10)}<br/><br/><br/>

    <!--Listas-->
    <ui:repeat value="#{['Antony','eh','foda']}" var="fodeza">
        #{fodeza}
    </ui:repeat> <br/><br/>

    <!--Set-->
    <ui:repeat value="#{{'Antony','eh','foda','foda'}}" var="fodeza">
        #{fodeza}
    </ui:repeat><br/><br/>

    <!--Map-->
    <ui:repeat value="#{{'Melhor Lugar': 'Canadá', 'Melhor herói' : 'Goku'}}" var="fodezaMap">
        <ui:repeat value="#{fodezaMap.entrySet().toArray()}" var="entry">
            #{entry.key} - #{entry.value} <br/>
        </ui:repeat>
    </ui:repeat><br/>

    <!--Stream-->
    <c:set var="numeroList" value="#{[1,2,3,4,5,6,7,8,9,10]}"/>
    <ui:repeat value="#{numeroList.stream().filter(v-> v>5).toList()}" var="result">
        #{result}
    </ui:repeat>
    <br/>
    #{numeroList.stream().average().get()}<br/>
    soma todos os numeros:
    #{numeroList.stream().sum()}<br/>
    soma com filtro aplicado:
    #{numeroList.stream().filter(v-> v>5).sum()}<br/><br/>
    

</h:body>

<!--Executando JS-->
<script type="javascript">
    function fazMagica(magica) {
        alert(magica);
    }

    function alertNome(nome) {
        alert(nome);
    }
</script>


</html>
